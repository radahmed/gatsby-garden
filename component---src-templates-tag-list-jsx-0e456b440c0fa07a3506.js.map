{"version":3,"sources":["webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/templates/tag-list.jsx"],"names":["kebabCase","createCompounder","result","word","index","toLowerCase","module","exports","TagList","tagList","data","allMarkdownRemark","group","sort","a","b","totalCount","map","tag","key","fieldValue","className","to"],"mappings":"wGAAA,IAuBIA,EAvBmB,EAAQ,OAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,iBAG5CC,EAAOC,QAAUP,G,2KCrBF,SAASQ,EAAT,GAA4B,IACrCC,EADoC,EAARC,KACbC,kBAAkBC,MAGrC,OAFAH,EAAQI,MAAK,SAACC,EAAGC,GAAQ,OAAOA,EAAEC,WAAaF,EAAEE,cAG/C,kBAAC,IAAD,KACE,oCAEA,4BACGP,EAAQQ,KAAI,SAAAC,GAAG,OACd,wBAAIC,IAAKD,EAAIE,WAAYC,UAAU,QACjC,kBAAC,IAAD,CAAMC,GAAE,SAAWtB,IAAUkB,EAAIE,YAAzB,KACLF,EAAIE,WADP,IACmB,0BAAMC,UAAU,SAASH,EAAIF","file":"component---src-templates-tag-list-jsx-0e456b440c0fa07a3506.js","sourcesContent":["var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../layout/layout\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport \"../styles/tag-list.css\"\r\n\r\nexport default function TagList({ data }) {\r\n  let tagList = data.allMarkdownRemark.group\r\n  tagList.sort((a, b) => { return b.totalCount - a.totalCount })\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>Tags</h1>\r\n\r\n      <ul>\r\n        {tagList.map(tag => (\r\n          <li key={tag.fieldValue} className=\"tags\">\r\n            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n              {tag.fieldValue} <span className=\"badge\">{tag.totalCount}</span>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}